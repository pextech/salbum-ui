{"version":3,"sources":["components/Navbar.js","components/SignupSkeleton.js","components/LoginSkeleton.js","components/Songs.js","components/Dashboard.js","components/Login.js","components/Signup.js","App.js","constants/actions.js","store/initialState.js","store/utility.js","store/reducers/counter.js","store/reducers/result.js","store/reducers/reset.js","store/reducers/change.js","store/index.js","index.js"],"names":["Navbar","className","SignupSkeleton","height","width","LoginSkeleton","Songs","token","id","albumName","useState","toLog","setToLog","songs","setSongs","addSong","setAddSong","useEffect","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","timer","setTimeout","clearTimeout","add","a","axios","create","baseURL","timeout","headers","Authorization","post","name","authorization","Accept","then","response","data","song","concat","catch","error","get","songData","Object","entries","length","map","songList","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","required","onClick","Dashboard","useSelector","state","useDispatch","setMessage","setError","album","setAblum","setAlbumName","addAlbum","setAddAlbum","clickAlbum","setClickAlbum","clickId","setClickId","setSubmitted","setFormSubmit","message","albumData","userAlbums","albums","delete","newAlbum","filter","item","Login","props","email","setEmail","password","setPassword","toSign","setToSign","logged","setLogged","setToken","loading","setLoading","axiosInstance","login","localStorage","setItem","info","Signup","setName","submitted","formSubmit","signup","fullnames","App","INCREMENT","DECREMENT","SUBTRACT","STORE_RESULT","DELETE_RESULT","RESET_PASSWORD","RESET_FAIL","RESET_SUCESS","CHANGE_PASSWORD","counterInitialState","counter","resultInitialState","results","resetInitialState","changeInitialState","updateObject","oldObject","updatedValues","reducer","action","val","Date","result","resultElementId","resetStart","resetSuccess","resetFail","rootReducer","combineReducers","ctr","counterReducer","res","resultReducer","reset","resetReducer","change","changeReducer","composeEnhancers","composeWithDevTools","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById"],"mappings":"0MASeA,EAPA,kBACb,qBAAKC,UAAU,SAAf,SACE,+C,6ECDD,gBACH,IAqBeC,EArBQ,kBACrB,yBAASD,UAAU,kBAAnB,SACE,qBAAKA,UAAU,wEAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,oBAAIA,UAAU,4DAAd,SAA0E,cAAC,IAAD,CAAUE,OAAQ,GAAIC,MAAO,QACvG,uBAAMH,UAAU,uEAAhB,UACE,qBAAKA,UAAU,yCAAf,SACE,oBAAIA,UAAU,2BAAd,SAAyC,cAAC,IAAD,CAAUE,OAAQ,GAAIC,MAAO,UAExE,sBAAKH,UAAU,oDAAf,UACE,cAAC,IAAD,CAAUE,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,oBCftC,gBACH,IAqBeC,EArBO,kBACpB,yBAASJ,UAAU,kBAAnB,SACE,qBAAKA,UAAU,wEAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,oBAAIA,UAAU,4DAAd,SAA0E,cAAC,IAAD,CAAUE,OAAQ,GAAIC,MAAO,QACvG,uBAAMH,UAAU,uEAAhB,UACE,qBAAKA,UAAU,yCAAf,SACE,oBAAIA,UAAU,2BAAd,SAAyC,cAAC,IAAD,CAAUE,OAAQ,GAAIC,MAAO,UAExE,sBAAKH,UAAU,oDAAf,UACE,cAAC,IAAD,CAAUE,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,MAC7B,cAAC,IAAD,CAAUD,OAAQ,GAAIC,MAAO,oBC8J1BE,MArKf,YAA0C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,UAAa,EACbC,oBAAS,GADI,mBAChCC,EADgC,KACzBC,EADyB,OAIbF,mBAAS,IAJI,mBAIhCG,EAJgC,KAIzBC,EAJyB,OAKTJ,mBAAS,IALA,mBAKhCK,EALgC,KAKvBC,EALuB,KAOvCC,qBAAU,WACRC,IAAMC,QAAN,oBAA2BV,EAA3B,UAA8C,CAC5CW,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZ,IAAMC,EAAQC,YAAW,cACtB,KAEH,OAAO,kBAAMC,aAAaF,MACzB,IAEH,IAAMG,EAAG,uCAAG,WAAOhB,GAAP,SAAAiB,EAAA,sDACYC,IAAMC,OAAO,CACjCC,QAAS,0CACTC,QAAS,IACTC,QAAS,CACPC,cAAe/B,EACf,eAAgB,sBAGNgC,KAAd,kDAA8D/B,EAA9D,UAA0E,CAAEgC,KAAMzB,GAAW,CAC3FsB,QAAS,CACPI,cAAelC,EACfmC,OAAQ,mBACR,eAAgB,sBAEjBC,MAAK,SAACC,GAcP,OAZA1B,IAAMC,QAAN,gBAAuByB,EAASC,KAAKC,KAAKN,KAA1C,eAAqD/B,EAArD,UAAwE,CACtEW,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAIZb,EAASD,EAAMkC,OAAOH,EAASC,KAAKC,OAC7BF,KACNI,OAAM,WACP9B,IAAM+B,MAAM,wBAAyB,CACnC7B,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAtCJ,2CAAH,sDAsDTV,qBAAU,WACcgB,IAAMC,OAAO,CACjCC,QAAS,0CACTC,QAAS,IACTC,QAAS,CACPC,cAAe/B,EACf,eAAgB,sBAGN2C,IAAd,kDAA6D1C,EAA7D,WAA0E,CACxE6B,QAAS,CACPI,cAAelC,EACfmC,OAAQ,mBACR,eAAgB,sBAEjBC,MAAK,SAACC,GACP,IAAMO,EAAWC,OAAOC,QAAQT,EAASC,MAAM,GAAG,GAIlD,OAFA/B,EAASqC,GAEFP,KACNI,OAAM,WACP9B,IAAM+B,MAAM,wBAAyB,CACnC7B,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,SAGb,IAEH,IAAM0B,EAAUD,OAAOC,QAAQxC,GAE/B,OACE,iCACc,IAAVF,GAAkB,cAAC,EAAD,KACT,IAAVA,GAA4B,KAAVJ,GAA0B,OAAVA,GACnC,qCACGM,EAAMyC,OAAS,EACd,qBAAKrD,UAAU,YAAf,SACE,6BAEGoD,EAAQE,KAAI,SAACC,GAAD,OACX,oBAAyBvD,UAAU,gCAAnC,SACE,qBAAKA,UAAU,QAAf,SAAwBuD,EAAS,GAAGhB,QAD7BgB,EAAS,GAAGhD,WAQ3B,sBAAKP,UAAU,QAAf,kCAEGQ,EACA,IAHH,eAQF,uBAAMgD,SA1ES,SAACC,GACpBA,EAAEC,iBAEE5C,IAGFC,EAAW,IACXe,EAAIhB,KAmEF,UACE,uBACE6C,KAAK,OACLpB,KAAK,QACLqB,YAAY,YACZC,MAAO/C,EACPgD,SAAU,SAACL,GAAD,OAAO1C,EAAW0C,EAAEM,OAAOF,QACrC7D,UAAU,kDACVgE,UAAQ,IAEV,uBAAOL,KAAK,SAASE,MAAM,gBAE7B,wBACEI,QAAS,WAAQtD,GAAS,IAC1BX,UAAU,6GAFZ,uBAQF,cAAC,IAAD,QCiESkE,MA7Nf,YAA+B,IAAV5D,EAAS,EAATA,MAAS,GACX6D,aAAY,SAACC,GAAD,OAAWA,KACvBC,cACS5D,oBAAS,IAHP,mBAGrBC,EAHqB,KAGdC,EAHc,OAKEF,mBAAS,IALX,mBAKZ6D,GALY,aAMF7D,oBAAS,GANP,mBAMd8D,GANc,aAOF9D,mBAAS,IAPP,mBAOrB+D,EAPqB,KAOdC,EAPc,OASMhE,mBAAS,IATf,mBASrBD,EATqB,KASVkE,EATU,OAUFjE,mBAAS,IAVP,gCAWIA,mBAAS,KAXb,mBAWrBkE,EAXqB,KAWXC,EAXW,OAYEnE,mBAAS,IAZX,gCAaQA,oBAAS,IAbjB,mBAarBoE,EAbqB,KAaTC,EAbS,OAcErE,mBAAS,GAdX,mBAcrBsE,EAdqB,KAcZC,EAdY,OAeMvE,oBAAS,GAff,mBAeVwE,GAfU,aAgBQxE,oBAAS,GAhBjB,mBAgBTyE,GAhBS,WAkBtBpD,EAAG,uCAAG,WAAO6C,GAAP,SAAA5C,EAAA,sDACYC,IAAMC,OAAO,CACjCC,QAAS,0CACTC,QAAS,IACTC,QAAS,CACPC,cAAe/B,EACf,eAAgB,sBAGNgC,KAAK,0CAA2C,CAAEC,KAAMoC,GAAY,CAChFvC,QAAS,CACPI,cAAelC,EACfmC,OAAQ,mBACR,eAAgB,sBAEjBC,MAAK,SAACC,GAgBP,OAdA1B,IAAMC,QAAN,gBAAuByB,EAASC,KAAK4B,MAAMjC,KAA3C,iBAAgE,CAC9DpB,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGZ+C,EAASD,EAAM1B,OAAOH,EAASC,KAAK4B,QACpCF,EAAW3B,EAASC,KAAKuC,SACzBZ,GAAS,GACTU,GAAa,GACNtC,KACNI,OAAM,WACP9B,IAAMC,QAAQ,yBAA0B,CACtCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZ6C,GAAS,GACTU,GAAa,MA3CL,2CAAH,sDA2DTjE,qBAAU,WACcgB,IAAMC,OAAO,CACjCC,QAAS,0CACTC,QAAS,IACTC,QAAS,CACPC,cAAe/B,EACf,eAAgB,sBAGN2C,IAAI,2CAA4C,CAC5Db,QAAS,CACPI,cAAelC,EACfmC,OAAQ,mBACR,eAAgB,sBAEjBC,MAAK,SAACC,GACP1B,IAAMC,QAAQ,cAAe,CAC3BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZ,IAAM0D,EAAYzC,EAASC,KAAKyC,WAAW,GAAGC,OAK9C,OAJAhB,EAAW3B,EAASC,KAAKuC,SACzBZ,GAAS,GACTU,GAAa,GACbR,EAASW,GACFzC,KACNI,OAAM,WACPwB,GAAS,GACTU,GAAa,QAEd,IAEH,IAAM7B,EAAUD,OAAOC,QAAQoB,GAE/B,OACE,iCACc,IAAV9D,GAAkB,cAAC,EAAD,KACT,IAAVA,IAAiC,IAAfmE,GACd,cAAC,EAAD,CAAOtE,GAAIwE,EAASzE,MAAOA,EAAOE,UAAWA,KACvC,IAAVE,IAAiC,IAAfmE,GAAkC,KAAVvE,GAA0B,OAAVA,GAC3D,qCACGkE,EAAMnB,OAAS,EACd,qBAAKrD,UAAU,YAAf,SACE,6BAEGoD,EAAQE,KAAI,SAACgC,GAAD,OACX,qBAAuBtF,UAAU,gCAAjC,UAEE,qBACEA,UAAU,QACViE,QAAS,WACPa,GAAc,GACdE,EAAWM,EAAO,GAAG/E,IACrBmE,EAAaY,EAAO,GAAG/C,OAL3B,SAQG+C,EAAO,GAAG/C,OAEb,6BACE,qBACE0B,QAAS,WACejC,IAAMC,OAAO,CACjCC,QAAS,0CACTC,QAAS,IACTC,QAAS,CACPC,cAAe/B,EACf,eAAgB,sBAGNiF,OAAd,kDAAgED,EAAO,GAAG/E,IAAM,CAC9E6B,QAAS,CACPI,cAAelC,EACfmC,OAAQ,mBACR,eAAgB,sBAEjBC,MAAK,SAACC,GACP1B,IAAMC,QAAQ,gBAAiB,CAC7BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZ,IAAM8D,EAAWhB,EAAQA,EAAMiB,QAAO,SAACC,GAAD,OAAUA,EAAKnF,KAAOiE,EAAM,GAAGjE,MAAM,GAQ3E,OAJAkE,EAASe,GACTlB,EAAW3B,EAASC,KAAKuC,SACzBZ,GAAS,GACTU,GAAa,GACNtC,KACNI,OAAM,WACPwB,GAAS,GACTU,GAAa,OAGjBjF,UAAU,2FAxCZ,mBAbKsF,EAAO,GAAG/E,WAgEzB,qBAAKP,UAAU,QAAf,4CAGF,uBAAMwD,SAnIS,SAACC,GACpBA,EAAEC,iBACFwB,GAAc,GAEVP,IAGFC,EAAY,IACZ9C,EAAI6C,KA2HF,UACE,uBACEhB,KAAK,OACLpB,KAAK,QACLqB,YAAY,aACZC,MAAOc,EACPb,SAAU,SAACL,GAAD,OAAOmB,EAAYnB,EAAEM,OAAOF,QACtC7D,UAAU,kDACVgE,UAAQ,IAEV,uBAAOL,KAAK,SAASE,MAAM,iBAE7B,wBACEI,QAAS,WAAQtD,GAAS,IAC1BX,UAAU,6GAFZ,uBAQF,cAAC,IAAD,QCpFS2F,EApID,SAACC,GAAW,IAAD,EACGnF,mBAAS,IADZ,mBAChBoF,EADgB,KACTC,EADS,OAESrF,mBAAS,IAFlB,mBAEhBsF,EAFgB,KAENC,EAFM,OAGKvF,oBAAS,GAHd,mBAGhBwF,EAHgB,KAGRC,EAHQ,OAIKzF,oBAAS,GAJd,mBAIhB0F,EAJgB,KAIRC,EAJQ,OAKG3F,mBAAS,IALZ,mBAKhBH,EALgB,KAKT+F,EALS,OAMO5F,mBAAS,IANhB,mBAMP6D,GANO,aAOG7D,oBAAS,GAPZ,mBAOhBuC,EAPgB,KAOTuB,EAPS,QASNJ,aAAY,SAACC,GAAD,OAAWA,KACN3D,oBAAS,IAVpB,mBAULwE,GAVK,aAWaxE,oBAAS,GAXtB,mBAWJyE,GAXI,cAYNb,cAEa5D,oBAAS,IAdhB,mBAchB6F,EAdgB,KAcPC,EAdO,KAevBvF,qBAAU,WACRuF,GAAW,GACX,IAAM5E,EAAQC,YAAW,WACvB2E,GAAW,KACV,KAEH,OAAO,kBAAM1E,aAAaF,MACzB,IAEH,IAAM6E,EAAgBxE,IAAMC,OAAO,CACjCC,QAAS,oCACTC,QAAS,IACTC,QAAS,CACPC,cAAe/B,EACf,eAAgB,sBAIdmG,EAAK,uCAAG,WAAOZ,EAAOE,GAAd,SAAAhE,EAAA,sDACZyE,EAAclE,KAAK,yCAA0C,CAAEuD,QAAOE,aAAYrD,MAAK,SAACC,GAatF,OAZA0D,EAAS1D,EAASC,KAAKtC,OACvBgE,EAAW3B,EAASC,KAAKuC,SACzBZ,GAAS,GAET6B,GAAU,GAIVM,aAAaC,QAAQ,QAASrG,GAIvBqC,KACNI,OAAM,WACP9B,IAAM+B,MAAM,0BAA2B,CACrC7B,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZ6C,GAAS,GACTU,GAAa,MA1BH,2CAAH,wDA8BX,OAEE,qCAEGqB,IAAqB,IAAVtD,GAAmB,cAAC,EAAD,KAC7BsD,IAAYL,IAAWE,GAAoB,KAAV7F,GACnC,0BAASN,UAAU,kBAAnB,UACE,qBAAKA,UAAU,wEAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,oBAAIA,UAAU,4DAAd,mBACA,uBACEwD,SAAU,SAACC,GACTA,EAAEC,iBAGFwB,GAAc,GAEVW,IAIF5E,IAAM2F,KAAK,0BAA2B,CACpCzF,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGZ+E,EAAMZ,EAAOE,KAIjB/F,UAAU,uEAzBZ,UA2BE,qBAAKA,UAAU,yCAAf,SACE,oBAAIA,UAAU,2BAAd,wCAEF,sBAAKA,UAAU,oDAAf,UACE,uBAAO2D,KAAK,QAAQpB,KAAK,QAAQqB,YAAY,aAAaC,MAAOgC,EAAO/B,SAAU,SAACL,GAAQqC,EAASrC,EAAEM,OAAOF,QAAW7D,UAAU,6GAClI,uBAAO2D,KAAK,WAAWpB,KAAK,WAAWqB,YAAY,gBAAgBC,MAAOkC,EAAUjC,SAAU,SAACL,GAAQuC,EAAYvC,EAAEM,OAAOF,QAAW7D,UAAU,6GACjJ,wBAAQ2D,KAAK,SAASE,MAAM,SAAStB,KAAK,SAASvC,UAAU,iHAA7D,mBACA,oBAAIA,UAAU,gCAAd,gBACA,wBAAQiE,QAAS,SAACR,GAAQyC,GAAU,IAAUlG,UAAU,iHAAxD,+BAKR,cAAC,IAAD,QAGU,IAAXiG,GAAmB,cAAC,EAAD,IACnBE,GAAU,cAAC,EAAD,CAAW7F,MAAOA,QCApBuG,EAtHA,SAACjB,GAAW,IAAD,EACEnF,mBAAS,IADX,mBACjBoF,EADiB,KACVC,EADU,OAEArF,mBAAS,IAFT,mBAEjB8B,EAFiB,KAEXuE,EAFW,OAGQrG,mBAAS,IAHjB,mBAGjBsF,EAHiB,KAGPC,EAHO,OAIEvF,oBAAS,GAJX,mBAIjBC,EAJiB,KAIVC,EAJU,OAKEF,mBAAS,IALX,mBAKV4F,GALU,aAMM5F,mBAAS,IANf,mBAMjB0E,EANiB,KAMRb,EANQ,OAQE7D,oBAAS,GARX,mBAQjBuC,EARiB,KAQVuB,EARU,OASQ9D,oBAAS,GATjB,gCAUP0D,aAAY,SAACC,GAAD,OAAWA,KACN3D,oBAAS,IAXnB,mBAWjBsG,EAXiB,KAWN9B,EAXM,OAYYxE,oBAAS,GAZrB,mBAYjBuG,EAZiB,KAYL9B,EAZK,QAaPb,cAEa5D,oBAAS,IAff,mBAejB6F,EAfiB,KAeRC,EAfQ,KAgBxBvF,qBAAU,WACRuF,GAAW,GACX,IAAM5E,EAAQC,YAAW,WACvB2E,GAAW,KACV,KAEH,OAAO,kBAAM1E,aAAaF,MACzB,IAEH,IAAMsF,EAAM,uCAAG,WAAO1E,EAAMsD,EAAOE,GAApB,SAAAhE,EAAA,sDACTgE,EAAS1C,OAAS,GACpBpC,IAAM+B,MAAM,qCAAsC,CAChD7B,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGdM,IAAMM,KAAK,0CAA2C,CAAE4E,UAAW3E,EAAMsD,QAAOE,aAAYrD,MAAK,SAACC,GAehG,OAdA1B,YAAM,6BAA8B,CAClCE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGZ2E,EAAS1D,EAASC,KAAKtC,OACvBgE,EAAW3B,EAASC,KAAKuC,SACzBZ,GAAS,GACTU,GAAa,GACNtC,KACNI,OAAM,WACPwB,GAAS,GACTU,GAAa,MA9BF,2CAAH,0DAkCZ,OACE,qCAEGqB,GAAW,cAAC,EAAD,KACVA,IAAYS,IAAcrG,GAC5B,0BAASV,UAAU,kBAAnB,UACE,qBAAKA,UAAU,wEAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,oBAAIA,UAAU,4DAAd,qBACA,uBACEwD,SAAU,SAACC,GACTA,EAAEC,iBAGFwB,GAAc,GAEVW,GAGFoB,EAAO1E,EAAMsD,EAAOE,IAIxB/F,UAAU,uEAdZ,UAgBE,qBAAKA,UAAU,yCAAf,SACE,oBAAIA,UAAU,2BAAd,+BAEF,sBAAKA,UAAU,oDAAf,UACG6F,GAASE,IAA2B,IAAfiB,IAAiC,IAAVhE,GAAkBmC,GAAW,oBAAInF,UAAU,gCAAd,SAA+CmF,IACzH,uBAAOxB,KAAK,OAAOpB,KAAK,QAAQqB,YAAY,YAAYC,MAAOtB,EAAMuB,SAAU,SAACL,GAAQqD,EAAQrD,EAAEM,OAAOF,QAAW7D,UAAU,6GAC9H,uBAAO2D,KAAK,QAAQpB,KAAK,QAAQqB,YAAY,aAAaC,MAAOgC,EAAO/B,SAAU,SAACL,GAAQqC,EAASrC,EAAEM,OAAOF,QAAW7D,UAAU,6GAClI,uBAAO2D,KAAK,WAAWpB,KAAK,WAAWqB,YAAY,gBAAgBC,MAAOkC,EAAUjC,SAAU,SAACL,GAAQuC,EAAYvC,EAAEM,OAAOF,QAAW7D,UAAU,6GACjJ,wBAAQ2D,KAAK,SAASE,MAAM,SAAStB,KAAK,SAASvC,UAAU,iHAA7D,qBACA,oBAAIA,UAAU,gCAAd,gBACA,wBAAQiE,QAAS,SAACR,GAAQ9C,GAAS,IAAUX,UAAU,iHAAvD,8BAKR,cAAC,IAAD,QAGc,IAAd+G,GAAsB,cAAC,EAAD,KACZ,IAAVrG,GAAkB,cAAC,EAAD,QCrGXyG,MATf,WACE,OACE,sBAAKnH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,wBCTOoH,EAAY,YACZC,EAAY,YAEZC,EAAW,WACXC,EAAe,eACfC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAa,aACbC,EAAe,eACfC,EAAkB,kBCTlBC,EAAsB,CACjCC,QAAS,GAGEC,EAAqB,CAChCC,QAAS,IAGEC,EAAoB,CAC/BpC,MAAO,GACPvF,MAAO,KACP0C,MAAO,KACPsD,SAAS,EACTnB,QAAS,MAGE+C,EAAqB,CAChCnC,SAAU,I,QCZGoC,EALM,SAACC,EAAWC,GAAZ,mBAAC,eACjBD,GACAC,ICmBUC,EAfC,WAA0C,IAAzClE,EAAwC,uDAAhCyD,EAAqBU,EAAW,uCACvD,OAAQA,EAAO5E,MACb,KAAKyD,EACH,OAAOe,EAAa/D,EAAO,CAAE0D,QAAS1D,EAAM0D,QAAU,IACxD,KAAKT,EACH,OAAOc,EAAa/D,EAAO,CAAE0D,QAAS1D,EAAM0D,QAAU,IACxD,IHVe,MGWb,OAAOK,EAAa/D,EAAO,CAAE0D,QAAS1D,EAAM0D,QAAUS,EAAOC,MAC/D,KAAKlB,EACH,OAAOa,EAAa/D,EAAO,CAAE0D,QAAS1D,EAAM0D,QAAUS,EAAOC,MAC/D,QACE,OAAOpE,ICSEkE,EAtBC,WAAyC,IAAxClE,EAAuC,uDAA/B2D,EAAoBQ,EAAW,uCACtD,OAAQA,EAAO5E,MACb,KAAK4D,EACH,OAAOY,EACL/D,EACA,CACE4D,QAAS5D,EAAM4D,QAAQlF,OAAO,CAAEvC,GAAI,IAAIkI,KAAQ5E,MAAO0E,EAAOG,WAGpE,KAAKlB,EACH,OAAOW,EACL/D,EACA,CACE4D,QAAS5D,EAAM4D,QAAQvC,QAAO,SAACiD,GAAD,OAAYA,EAAOnI,KAAOgI,EAAOI,qBAGrE,QAEE,OAAOvE,ICbPwE,EAAa,SAACxE,EAAOmE,GAAR,OAAmBJ,EAAa/D,EACjD,CACEyB,MAAO0C,EAAO1C,MACd7C,MAAOuF,EAAOvF,MACdsD,QAASiC,EAAOjC,QAChBhG,MAAOiI,EAAOjI,MACd6E,QAASoD,EAAOpD,WAGd0D,EAAe,SAACzE,EAAOmE,GAAR,OAAmBJ,EAAa/D,EAAO,CAC1D9D,MAAOiI,EAAOjI,MACduF,MAAO0C,EAAO1C,MACd7C,MAAO,KACPsD,SAAS,EACTnB,QAASoD,EAAOpD,WAGZ2D,EAAY,SAAC1E,EAAOmE,GAAR,OAAmBJ,EAAa/D,EAAO,CACvDpB,MAAOuF,EAAOvF,MACdsD,SAAS,KAgBIgC,EAbC,WAAwC,IAAvClE,EAAsC,uDAA9B6D,EAAmBM,EAAW,uCACrD,OAAQA,EAAO5E,MACb,KAAK8D,EACH,OAAOmB,EAAWxE,EAAOmE,GAC3B,KAAKZ,EACH,OAAOkB,EAAazE,EAAOmE,GAC7B,KAAKb,EACH,OAAOoB,EAAU1E,EAAOmE,GAC1B,QACE,OAAOnE,ICtBEkE,EAVC,WAAyC,IAAxClE,EAAuC,uDAA/B8D,EAAoBK,EAAW,uCACtD,OAAQA,EAAO5E,MACb,KAAKiE,EACH,OAAOO,EAAa/D,EAClB,CAAE2B,SAAUwC,EAAOxC,WACvB,QACE,OAAO3B,ICJP2E,EAAcC,0BAAgB,CAClCC,IAAKC,EACLC,IAAKC,EACLC,MAAOC,EACPC,OAAQC,IAQJC,EAAmBC,uBAAuBC,UAIjCC,EAFDC,sBAAYd,EAAaU,EAAiBK,2BAPzC,kBAAM,SAACC,GAAD,OAAU,SAACxB,GAE9B,OADewB,EAAKxB,OAM0DyB,OCjBhFC,IAASC,OAAO,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MAAoBO,SAASC,eAAe,W","file":"static/js/main.ea24ac1f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = () => (\n  <div className=\"navbar\">\n    <h1>Salbum App</h1>\n\n  </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n  <SkeletonTheme color=\"#ddd\" highlightColor=\"#444\" />;\nconst SignupSkeleton = () => (\n  <section className=\"bg-gray-100 p-6\">\n    <div className=\"bg-white rounded-2xl items-center content-center shadow-md p-6 sm:p-2\">\n      <div className=\"items-center md:m-6 md:p-6 xs:m-2 xs:p-2\">\n        <h3 className=\"text-primary-100 text-2xl content-center text-center mt-5\"><Skeleton height={30} width={200} /></h3>\n        <form className=\"content-center m-3 p-3 md:m-0.5 flex justify-center h-auto flex-col \">\n          <div className=\"text-md content-center text-center m-2\">\n            <h2 className=\"text-gray-700 xs:text-xs\"><Skeleton height={30} width={150} /></h2>\n          </div>\n          <div className=\"m-3 p-3 flex flex-col justify-center items-center\">\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n          </div>\n        </form>\n      </div>\n    </div>\n  </section>\n);\nexport default SignupSkeleton;\n","import React from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n  <SkeletonTheme color=\"#ddd\" highlightColor=\"#444\" />;\nconst LoginSkeleton = () => (\n  <section className=\"bg-gray-100 p-6\">\n    <div className=\"bg-white rounded-2xl items-center content-center shadow-md p-6 sm:p-2\">\n      <div className=\"items-center md:m-6 md:p-6 xs:m-2 xs:p-2\">\n        <h3 className=\"text-primary-100 text-2xl content-center text-center mt-5\"><Skeleton height={30} width={200} /></h3>\n        <form className=\"content-center m-3 p-3 md:m-0.5 flex justify-center h-auto flex-col \">\n          <div className=\"text-md content-center text-center m-2\">\n            <h2 className=\"text-gray-700 xs:text-xs\"><Skeleton height={30} width={150} /></h2>\n          </div>\n          <div className=\"m-3 p-3 flex flex-col justify-center items-center\">\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n            <Skeleton height={40} width={600} />\n          </div>\n        </form>\n      </div>\n    </div>\n  </section>\n);\nexport default LoginSkeleton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-shadow */\n/* eslint-disable import/no-cycle */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Login from './Login';\n\nfunction Songs({ token, id, albumName }) {\n  const [toLog, setToLog] = useState(false);\n  // const [token, setToken] = useState('');\n\n  const [songs, setSongs] = useState([]);\n  const [addSong, setAddSong] = useState('');\n\n  useEffect(() => {\n    toast.success(`songs for ${albumName} Album`, {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    const timer = setTimeout(() => {\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const add = async (addSong) => {\n    const axiosInstance = axios.create({\n      baseURL: 'https://salbum-api.herokuapp.com/albums',\n      timeout: 5000,\n      headers: {\n        Authorization: token,\n        'Content-Type': 'application/json',\n      },\n    });\n    axiosInstance.post(`https://salbum-api.herokuapp.com/albums/${id}/songs`, { name: addSong }, {\n      headers: {\n        authorization: token,\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => {\n      // const newAlbum = Object.entries(response.data.album);\n      toast.success(`added ${response.data.song.name} in ${albumName} Album`, {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      // setAddAlbum(response.data.token);\n      setSongs(songs.concat(response.data.song));\n      return response;\n    }).catch(() => {\n      toast.error('some problems occured', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (addSong) {\n    //   dispatch(reset(email));\n      // dispatch(forgotPassword(email));\n      setAddSong('');\n      add(addSong);\n      // dispatch(forgotPassword(newState.reset.email));\n    }\n  };\n\n  useEffect(() => {\n    const axiosInstance = axios.create({\n      baseURL: 'https://salbum-api.herokuapp.com/albums',\n      timeout: 10000,\n      headers: {\n        Authorization: token,\n        'Content-Type': 'application/json',\n      },\n    });\n    axiosInstance.get(`https://salbum-api.herokuapp.com/albums/${id}/songs/`, {\n      headers: {\n        authorization: token,\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => {\n      const songData = Object.entries(response.data)[2][1];\n\n      setSongs(songData);\n\n      return response;\n    }).catch(() => {\n      toast.error('some problems occured', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    });\n  }, []);\n\n  const entries = Object.entries(songs);\n\n  return (\n    <div>\n      { toLog === true && <Login /> }\n      {toLog !== true && token !== '' && token !== null && (\n      <>\n        {songs.length > 0 ? (\n          <div className=\"book-list\">\n            <ul>\n\n              {entries.map((songList) => (\n                <li key={songList[1].id} className=\"flex flex-row justify-between\">\n                  <div className=\"title\">{songList[1].name}</div>\n\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div className=\"empty\">\n            No Songs available in\n            {albumName}\n            {' '}\n            album :).\n          </div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"album\"\n            placeholder=\"Song Name\"\n            value={addSong}\n            onChange={(e) => setAddSong(e.target.value)}\n            className=\"bg-white focus:bg-white border-white shadow-lg \"\n            required\n          />\n          <input type=\"submit\" value=\"add Song\" />\n        </form>\n        <button\n          onClick={() => { setToLog(true); }}\n          className=\"w-full sm:w-full border-primary-100 bg-primary-100 rounded content-center center shadow-md h-10 text-white\"\n        >\n          Logout\n        </button>\n      </>\n      )}\n      <ToastContainer />\n    </div>\n\n  );\n}\n\nexport default Songs;\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-len */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-shadow */\n/* eslint-disable import/no-cycle */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Login from './Login';\nimport Songs from './Songs';\n\nfunction Dashboard({ token }) {\n  const newState = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [toLog, setToLog] = useState(false);\n  // const [token, setToken] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(false);\n  const [album, setAblum] = useState([]);\n\n  const [albumName, setAlbumName] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [addAlbum, setAddAlbum] = useState('');\n  const [addSong, setAddSong] = useState('');\n  const [clickAlbum, setClickAlbum] = useState(false);\n  const [clickId, setClickId] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [formSubmit, setFormSubmit] = useState(false);\n\n  const add = async (addAlbum) => {\n    const axiosInstance = axios.create({\n      baseURL: 'https://salbum-api.herokuapp.com/albums',\n      timeout: 5000,\n      headers: {\n        Authorization: token,\n        'Content-Type': 'application/json',\n      },\n    });\n    axiosInstance.post('https://salbum-api.herokuapp.com/albums', { name: addAlbum }, {\n      headers: {\n        authorization: token,\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => {\n      // const newAlbum = Object.entries(response.data.album);\n      toast.success(`added ${response.data.album.name} successfully`, {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      // setAddAlbum(response.data.token);\n      setAblum(album.concat(response.data.album));\n      setMessage(response.data.message);\n      setError(false);\n      setSubmitted(true);\n      return response;\n    }).catch(() => {\n      toast.success('some problems occurred', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setError(true);\n      setSubmitted(false);\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormSubmit(true);\n\n    if (addAlbum) {\n    //   dispatch(reset(email));\n      // dispatch(forgotPassword(email));\n      setAddAlbum('');\n      add(addAlbum);\n      // dispatch(forgotPassword(newState.reset.email));\n    }\n  };\n\n  useEffect(() => {\n    const axiosInstance = axios.create({\n      baseURL: 'https://salbum-api.herokuapp.com/albums',\n      timeout: 10000,\n      headers: {\n        Authorization: token,\n        'Content-Type': 'application/json',\n      },\n    });\n    axiosInstance.get('https://salbum-api.herokuapp.com/albums/', {\n      headers: {\n        authorization: token,\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    }).then((response) => {\n      toast.success('your albums', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      const albumData = response.data.userAlbums[0].albums;\n      setMessage(response.data.message);\n      setError(false);\n      setSubmitted(true);\n      setAblum(albumData);\n      return response;\n    }).catch(() => {\n      setError(true);\n      setSubmitted(false);\n    });\n  }, []);\n\n  const entries = Object.entries(album);\n\n  return (\n    <div>\n      { toLog === true && <Login /> }\n      {toLog !== true && clickAlbum === true\n        && <Songs id={clickId} token={token} albumName={albumName} />}\n      {toLog !== true && clickAlbum === false && token !== '' && token !== null && (\n      <>\n        {album.length > 0 ? (\n          <div className=\"book-list\">\n            <ul>\n\n              {entries.map((albums) => (\n                <li key={albums[1].id} className=\"flex flex-row justify-between\">\n\n                  <div\n                    className=\"title\"\n                    onClick={() => {\n                      setClickAlbum(true);\n                      setClickId(albums[1].id);\n                      setAlbumName(albums[1].name);\n                    }}\n                  >\n                    {albums[1].name}\n                  </div>\n                  <ul>\n                    <div\n                      onClick={() => {\n                        const axiosInstance = axios.create({\n                          baseURL: 'https://salbum-api.herokuapp.com/albums',\n                          timeout: 5000,\n                          headers: {\n                            Authorization: token,\n                            'Content-Type': 'application/json',\n                          },\n                        });\n                        axiosInstance.delete(`https://salbum-api.herokuapp.com/albums/${albums[1].id}`, {\n                          headers: {\n                            authorization: token,\n                            Accept: 'application/json',\n                            'Content-Type': 'application/json',\n                          },\n                        }).then((response) => {\n                          toast.success('deleted Album', {\n                            position: 'top-right',\n                            autoClose: 3000,\n                            hideProgressBar: true,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                          });\n                          const newAlbum = album ? album.filter((item) => item.id !== album[1].id) : [];\n\n                          // setAddAlbum(response.data.token);\n\n                          setAblum(newAlbum);\n                          setMessage(response.data.message);\n                          setError(false);\n                          setSubmitted(true);\n                          return response;\n                        }).catch(() => {\n                          setError(true);\n                          setSubmitted(false);\n                        });\n                      }}\n                      className=\"w-6 h-6 text-sm text-white bg-primary-200 shadow-md justify-center pl-2 hover:bg-red-500\"\n                    >\n                      x\n                    </div>\n                  </ul>\n\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div className=\"empty\">No Albums available for you:).</div>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"album\"\n            placeholder=\"Album Name\"\n            value={addAlbum}\n            onChange={(e) => setAddAlbum(e.target.value)}\n            className=\"bg-white focus:bg-white border-white shadow-lg \"\n            required\n          />\n          <input type=\"submit\" value=\"add Album\" />\n        </form>\n        <button\n          onClick={() => { setToLog(true); }}\n          className=\"w-full sm:w-full border-primary-100 bg-primary-100 rounded content-center center shadow-md h-10 text-white\"\n        >\n          Logout\n        </button>\n      </>\n      )}\n      <ToastContainer />\n    </div>\n\n  );\n}\n\nexport default Dashboard;\n","/* eslint-disable no-shadow */\n/* eslint-disable import/no-cycle */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport Signup from './Signup';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LoginSkeleton from './LoginSkeleton';\nimport Dashboard from './Dashboard';\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [toSign, setToSign] = useState(false);\n  const [logged, setLogged] = useState(false);\n  const [token, setToken] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(false);\n\n  const newState = useSelector((state) => state);\n  const [submitted, setSubmitted] = useState(false);\n  const [formSubmit, setFormSubmit] = useState(false);\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const axiosInstance = axios.create({\n    baseURL: 'https://salbum-api.herokuapp.com/',\n    timeout: 5000,\n    headers: {\n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n\n  const login = async (email, password) => {\n    axiosInstance.post('https://salbum-api.herokuapp.com/login', { email, password }).then((response) => {\n      setToken(response.data.token);\n      setMessage(response.data.message);\n      setError(false);\n      // setSubmitted(true);\n      setLogged(true);\n      // const tokenParam = window.location.search;\n\n      // // const token = tokenParam.split('=')[1];\n      localStorage.setItem('token', token);\n\n      // window.location.replace('/dashboard');\n\n      return response;\n    }).catch(() => {\n      toast.error('Email is not recognised', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      setError(true);\n      setSubmitted(false);\n    });\n  };\n\n  return (\n\n    <>\n      {/* <HomeNavComponent /> */}\n      {loading && error === false && <LoginSkeleton />}\n      {!loading && !toSign && !logged && token === '' && (\n      <section className=\"bg-gray-100 p-6\">\n        <div className=\"bg-white rounded-2xl items-center content-center shadow-md p-6 sm:p-2\">\n          <div className=\"items-center md:m-6 md:p-6 xs:m-2 xs:p-2\">\n            <h3 className=\"text-primary-100 text-2xl content-center text-center mt-5\">LOGIN</h3>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                //  props.OnReset(email);\n                //  setSubmitted(true);\n                setFormSubmit(true);\n\n                if (email) {\n                //   dispatch(reset(email));\n                  // dispatch(forgotPassword(email));\n\n                  toast.info('Email is being Verified', {\n                    position: 'top-right',\n                    autoClose: 5000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                  });\n\n                  login(email, password);\n                  // dispatch(forgotPassword(newState.reset.email));\n                }\n              }}\n              className=\"content-center m-3 p-3 md:m-0.5 flex justify-center h-auto flex-col \"\n            >\n              <div className=\"text-md content-center text-center m-2\">\n                <h2 className=\"text-gray-700 xs:text-xs\">Account created - Log in</h2>\n              </div>\n              <div className=\"m-3 p-3 flex flex-col justify-center items-center\">\n                <input type=\"email\" name=\"email\" placeholder=\"Your email\" value={email} onChange={(e) => { setEmail(e.target.value); }} className=\"w-1/2 sm:w-full border-primary-100 rounded content-center p-4 m-4 center shadow-md h-10 text-primary-100\" />\n                <input type=\"password\" name=\"password\" placeholder=\"Your password\" value={password} onChange={(e) => { setPassword(e.target.value); }} className=\"w-1/2 sm:w-full border-primary-100 rounded content-center p-4 m-4 center shadow-md h-10 text-primary-100\" />\n                <button type=\"submit\" value=\"Submit\" name=\"submit\" className=\"w-full sm:w-full border-primary-100 bg-primary-100 m-4 rounded content-center center shadow-md h-10 text-white\">Login</button>\n                <h6 className=\"text-primary-100 text-xs mb-2\">or</h6>\n                <button onClick={(e) => { setToSign(true); }} className=\"w-full sm:w-full border-primary-100 bg-primary-100 m-4 rounded content-center center shadow-md h-10 text-white\">SignUp</button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <ToastContainer />\n      </section>\n      )}\n      {toSign === true && <Signup /> }\n      {logged && <Dashboard token={token} />}\n\n      {/*\n      <FooterOne /> */}\n    </>\n  );\n};\n// const mapStateToProps = (state) => ({\n//   email: state.reset.email,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   OnReset: (email) => dispatch(reset(email)),\n// });\n\nexport default Login;\n","/* eslint-disable no-shadow */\n/* eslint-disable import/no-cycle */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SignupSkeleton from './SignupSkeleton';\nimport Login from './Login';\n\nconst Signup = (props) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [toLog, setToLog] = useState(false);\n  const [token, setToken] = useState('');\n  const [message, setMessage] = useState('');\n\n  const [error, setError] = useState(false);\n  const [validate, setValidate] = useState(false);\n  const newState = useSelector((state) => state);\n  const [submitted, setSubmitted] = useState(false);\n  const [formSubmit, setFormSubmit] = useState(false);\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const signup = async (name, email, password) => {\n    if (password.length < 6) {\n      toast.error('minimum password lenth is 6 digits', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    axios.post('https://salbum-api.herokuapp.com/signUp', { fullnames: name, email, password }).then((response) => {\n      toast('Created account, now login', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n\n      setToken(response.data.token);\n      setMessage(response.data.message);\n      setError(false);\n      setSubmitted(true);\n      return response;\n    }).catch(() => {\n      setError(true);\n      setSubmitted(false);\n    });\n  };\n\n  return (\n    <>\n      {/* <HomeNavComponent /> */}\n      {loading && <SignupSkeleton />}\n      {!loading && !submitted && !toLog && (\n      <section className=\"bg-gray-100 p-6\">\n        <div className=\"bg-white rounded-2xl items-center content-center shadow-md p-6 sm:p-2\">\n          <div className=\"items-center md:m-6 md:p-6 xs:m-2 xs:p-2\">\n            <h3 className=\"text-primary-100 text-2xl content-center text-center mt-5\">Sign-Up</h3>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                //  props.OnReset(email);\n                //  setSubmitted(true);\n                setFormSubmit(true);\n\n                if (email) {\n                //   dispatch(reset(email));\n                  // dispatch(forgotPassword(email));\n                  signup(name, email, password);\n                  // dispatch(forgotPassword(newState.reset.email));\n                }\n              }}\n              className=\"content-center m-3 p-3 md:m-0.5 flex justify-center h-auto flex-col \"\n            >\n              <div className=\"text-md content-center text-center m-2\">\n                <h2 className=\"text-gray-700 xs:text-xs\">Enter your Info</h2>\n              </div>\n              <div className=\"m-3 p-3 flex flex-col justify-center items-center\">\n                {email && password && formSubmit === true && error !== true && message && <h6 className=\"text-primary-100 text-xs mb-2\">{message}</h6>}\n                <input type=\"text\" name=\"names\" placeholder=\"Your name\" value={name} onChange={(e) => { setName(e.target.value); }} className=\"w-1/2 sm:w-full border-primary-100 rounded content-center p-4 m-4 center shadow-md h-10 text-primary-100\" />\n                <input type=\"email\" name=\"email\" placeholder=\"Your email\" value={email} onChange={(e) => { setEmail(e.target.value); }} className=\"w-1/2 sm:w-full border-primary-100 rounded content-center p-4 m-4 center shadow-md h-10 text-primary-100\" />\n                <input type=\"password\" name=\"password\" placeholder=\"Your password\" value={password} onChange={(e) => { setPassword(e.target.value); }} className=\"w-1/2 sm:w-full border-primary-100 rounded content-center p-4 m-4 center shadow-md h-10 text-primary-100\" />\n                <button type=\"submit\" value=\"Submit\" name=\"submit\" className=\"w-full sm:w-full border-primary-100 bg-primary-100 m-4 rounded content-center center shadow-md h-10 text-white\">Sign-up</button>\n                <h6 className=\"text-primary-100 text-xs mb-2\">or</h6>\n                <button onClick={(e) => { setToLog(true); }} className=\"w-full sm:w-full border-primary-100 bg-primary-100 m-4 rounded content-center center shadow-md h-10 text-white\">Login</button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <ToastContainer />\n      </section>\n      )}\n      { submitted === true && <Login /> }\n      { toLog === true && <Login /> }\n\n      {/*\n      <FooterOne /> */}\n    </>\n  );\n};\n// const mapStateToProps = (state) => ({\n//   email: state.reset.email,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   OnReset: (email) => dispatch(reset(email)),\n// });\n\nexport default Signup;\n","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Signup from './components/Signup';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Signup />\n    </div>\n  );\n}\n\nexport default App;\n","export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD = 'ADD';\nexport const SUBTRACT = 'SUBTRACT';\nexport const STORE_RESULT = 'STORE_RESULT';\nexport const DELETE_RESULT = 'DELETE_RESULT';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\nexport const RESET_FAIL = 'RESET_FAIL';\nexport const RESET_SUCESS = 'RESET_SUCESS';\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\n","export const counterInitialState = {\n  counter: 0,\n};\n\nexport const resultInitialState = {\n  results: [],\n};\n\nexport const resetInitialState = {\n  email: '',\n  token: null,\n  error: null,\n  loading: false,\n  message: null,\n};\n\nexport const changeInitialState = {\n  password: '',\n};\n","const updateObject = (oldObject, updatedValues) => ({\n  ...oldObject,\n  ...updatedValues,\n});\n\nexport default updateObject;\n","import {\n  INCREMENT, DECREMENT, ADD, SUBTRACT,\n} from '../../constants/actions';\nimport { counterInitialState } from '../initialState';\nimport updateObject from '../utility';\n\nconst reducer = (state = counterInitialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return updateObject(state, { counter: state.counter + 1 });\n    case DECREMENT:\n      return updateObject(state, { counter: state.counter - 1 });\n    case ADD:\n      return updateObject(state, { counter: state.counter + action.val });\n    case SUBTRACT:\n      return updateObject(state, { counter: state.counter - action.val });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { STORE_RESULT, DELETE_RESULT } from '../../constants/actions';\nimport { resultInitialState } from '../initialState';\nimport updateObject from '../utility';\n\nconst reducer = (state = resultInitialState, action) => {\n  switch (action.type) {\n    case STORE_RESULT:\n      return updateObject(\n        state,\n        {\n          results: state.results.concat({ id: new Date(), value: action.result }),\n        },\n      );\n    case DELETE_RESULT:\n      return updateObject(\n        state,\n        {\n          results: state.results.filter((result) => result.id !== action.resultElementId),\n        },\n      );\n    default:\n\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  RESET_FAIL,\n  RESET_PASSWORD, RESET_SUCESS,\n\n} from '../../constants/actions';\n\nimport { resetInitialState } from '../initialState';\nimport updateObject from '../utility';\n\nconst resetStart = (state, action) => updateObject(state,\n  {\n    email: action.email,\n    error: action.error,\n    loading: action.loading,\n    token: action.token,\n    message: action.message,\n  });\n\nconst resetSuccess = (state, action) => updateObject(state, {\n  token: action.token,\n  email: action.email,\n  error: null,\n  loading: false,\n  message: action.message,\n});\n\nconst resetFail = (state, action) => updateObject(state, {\n  error: action.error,\n  loading: false,\n});\n\nconst reducer = (state = resetInitialState, action) => {\n  switch (action.type) {\n    case RESET_PASSWORD:\n      return resetStart(state, action);\n    case RESET_SUCESS:\n      return resetSuccess(state, action);\n    case RESET_FAIL:\n      return resetFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  CHANGE_PASSWORD,\n\n} from '../../constants/actions';\n\nimport { changeInitialState } from '../initialState';\nimport updateObject from '../utility';\n\nconst reducer = (state = changeInitialState, action) => {\n  switch (action.type) {\n    case CHANGE_PASSWORD:\n      return updateObject(state,\n        { password: action.password });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  createStore, combineReducers, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport counterReducer from './reducers/counter';\nimport resultReducer from './reducers/result';\nimport resetReducer from './reducers/reset';\nimport changeReducer from './reducers/change';\n\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer,\n  reset: resetReducer,\n  change: changeReducer,\n});\n\nconst logger = () => (next) => (action) => {\n  const result = next(action);\n  return result;\n};\n\nconst composeEnhancers = composeWithDevTools || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}